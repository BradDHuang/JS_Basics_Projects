
OOP:
a programming Model based around objects.

Constructor Func.s
    e.g. function House(...) {...}
         var firstHouse = new House(...) // new!
         a property called "__proto__" gets created. // prototype
     
    e.g. 
    function Dog(name, age) {
    	this.name = name;
    	this.age = age;
    	
        this.bark = function() {
            console.log(this.name + " just barked！");
        }
    }
    
    var rusty = new Dog("Rusty", 3);
    var fido = new Dog("Fido", 1);
    
    rusty.bark() // Rusty just barked！
    fido.bark() // Fido just barked！

Multi-Constructors
    e.g.
    function Car(...) {
        ...
        // preset value
        this.numOfWheels = 4;
    }
    function Motorcycle(...) {
        // using call()/apply()
        
        Car.call(this, ...)
        
        Car.apply(this, [...])
        Car.apply(this, arguments)
        e.g. 
        function listArgs() {
            return arguments;
        }
        listArgs(1, 2, 3) // [1, 2, 3]
        
        this.numOfWheels = 2;
    }
    
__proto__ : Object
Anytime an object is created using the "new", 
the property called "__proto__" gets created,
linking the object and the prototype property of the constructor func.
    e.g.
    function Person(name) {
        this.name = name;
    }
    var elie = new Person("Elie");
    
    elie.__proto__ === Person.prototype // true
    
    Person.prototype.constructor // ƒ Person(name) { this.name = name; }
    Person.prototype.constructor === Person // true
    
    
    
    
    
    

    
    



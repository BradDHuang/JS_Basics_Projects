
// Here are links for reviewing some important concepts of JS & React & ...
// Definition & Usage.

JavaScript data types and data structures:
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures

var vs. let:
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/let
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/var

The let statement declares a block scope local variable, optionally initializing it to a value.
unlike the var keyword, 
which defines a variable globally, or locally to an entire function regardless of block scope.

var declarations, 
wherever they occur, 
are processed before any code is executed. 
// This is called hoisting,
// as it appears that the variable declaration is moved to the top of the function or global code.
// Undeclared variables are always global.

Hoisting:
https://developer.mozilla.org/en-US/docs/Glossary/Hoisting

Strict mode:
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode

Spread syntax:
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax

Functions:
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions
Arrow functions:
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions
Callback function:
https://developer.mozilla.org/en-US/docs/Glossary/Callback_function

Closures:
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures

Classes:
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes/extends

Function.prototype:
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/prototype

Destructuring assignment:
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment

RegExp:
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp

Promise:
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise











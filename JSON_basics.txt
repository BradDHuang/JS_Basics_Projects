

JSON (JavaScript Object Notation)

// A Simplified Form of XML and lightweight
// Used to transport data, especially between a server and its clients (such as web pages)
// Used to store data, such as in NOSQL databases

• Data is in name/value pairs;
• Data is separated by commas;
• Curly braces hold objects;
• Square brackets hold arrays.

// In computing, Extensible Markup Language (XML) 
// is a markup language that defines a set of rules 
// for encoding documents 
// in a format 
// that is both human-readable and machine-readable. 

// Both JSON and XML can be used to receive data from a web server.

JSON is Unlike XML Because
    JSON doesn't use end tag
    JSON is shorter
    JSON is quicker to read and write
    JSON can use arrays
The biggest difference is:
    XML has to be parsed with an XML parser. 
    JSON can be parsed by a standard JavaScript function.
    
Why JSON is Better Than XML
    XML is much more difficult to parse than JSON.
    JSON is parsed into a ready-to-use JavaScript object.
// The JSON format, represented in a String, 
// is syntactically identical to the code for creating JavaScript objects.


// 1. Declare JSON as a JS string or read it from another place
let text = '{ "employees" : [' +
'{ "firstName":"John" , "lastName":"Doe" },' +
'{ "firstName":"Anna" , "lastName":"Smith" },' +
'{ "firstName":"Peter" , "lastName":"Jones" } ]}';

// 2. Convert JSON to a JS object
let obj = JSON.parse(text); 
// typically, as an array of individual objects

console.log(obj); // Object {employees: Array(3)}

// 3. Use the JS object to retrieve information
let e1 = obj.employees[1].firstName + " " + obj.employees[1].lastName;
console.log(e1); // Anna Smith
obj.employees[0].firstName = "Gilbert";
let newE0 = obj.employees[0].firstName;
console.log(newE0); // Gilbert

// 4. Convert a JS object to JSON
let jsonText = JSON.stringify(obj);

console.log(jsonText);
/*
{"employees":[{"firstName":"Gilbert","lastName":"Doe"},{"firstName":"Anna","lastName":"Smith"},{"firstName":"Peter","lastName":"Jones"}]}
*/
// (the result has no white space)





